const mongoose = require('mongoose')

/* ========
    PI - Primary Insurance, SI - Secondary Insurance , TI- Third Insurance
    RP - Responsible Party, EI - Employers Information, AI - Attorney Information
===== */ 

const btBillingDetailsSchema = new mongoose.Schema({
    patientId: { type: mongoose.Schema.ObjectId, ref: "patients"},
    caseName: { type: String },
    primaryInsurance: { type: String },
    PI_payerID : { type: String},
    PI_billingType : { type: String },
    PI_insuranceType : { type: String },
    PI_idPolicy: { type: String },
    PI_numberOfVisit: { type: String },
    PI_group: { type: String },
    PI_customerServicePhNo: { type: String },
    PI_effectiveDate: { type: String },
    PI_endDate: { type: String },
    PI_rxRequired: { type: String },
    PI_copayAmt: { type: String },
    PI_highDeductible: { type: String },
    PI_deductibleNetAmt: { type: String },
    PI_turnOnModifier: { type: String },
    PI_hardSoftCap: { type: String },
    PI_hardSoftCapText: { type: String },
    PI_passportApprovalTo: { type: String, default: "" },
    PI_passportApprovalFrom: { type: String, default: "" },
    PI_passportProvider: { type: String, default: "" },
    secondaryInsurance: { type: String },
    SI_payerID : { type: String},
    SI_billingType : { type: String },
    SI_insuranceType : { type: String },
    SI_idPolicy: { type: String },
    SI_group: { type: String },
    SI_customerServicePhNo: { type: String },
    SI_authorization: { type: String },
    SI_authorizationFromDate: { type: String },
    SI_authorizationToDate: { type: String },
    SI_effectiveDate: { type: String },
    SI_endDate: { type: String },
    SI_rxRequired: { type: String },
    SI_copayAmt: { type: String },
    SI_highDeductible: { type: String },
    SI_deductibleNetAmt: { type: String },
    SI_hardSoftCap: { type: String },
    SI_hardSoftCapText: { type: String },
    SI_asPrimaryInsurance: { type: Boolean, default: false },
    thirdInsurance: { type: String, default: "" },
    TI_idPolicy: { type: String, default: "" },
    TI_group: { type: String, default: "" },
    TI_customerServicePhNo: { type: String, default: "" },
    TI_authorization: { type: String, default: "" },
    TI_authorizationFromDate: { type: String, default: "" },
    TI_authorizationToDate: { type: String, default: "" },
    TI_effectiveDate: { type: String, default: "" },
    TI_endDate: { type: String, default: "" },
    TI_rxRequired: { type: String, default: "" },
    TI_copayAmt: { type: String, default: "" },
    TI_highDeductible: { type: String, default: "" },
    TI_deductibleNetAmt: { type: String, default: "" },
    TI_hardSoftCap: { type: String, default: "" },
    TI_hardSoftCapText: { type: String, default: "" },
    RP_relationWithPatient: { type: String },
    RP_otherRelation: { type: String },
    RP_firstName: { type: String },
    RP_middleName: { type: String },
    RP_lastName: { type: String },
    RP_dob: { type: String },
    RP_maritalStatus: { type: String },
    RP_gender: { type: String },
    RP_email: { type: String },
    RP_phoneNo: { type: String },
    RP_cellPhoneNo: { type: String },
    RP_workExtension: { type: String },
    RP_injuryRelatedTo: { type: String },
    RP_carrierName: { type: String, default: "" },
    RP_dateOfInjury: { type: String, default: "" },
    RP_state: { type: String, default: "" },
    RP_claim: { type: String, default: "" },
    RP_adjusterName: { type: String, default: "" },
    RP_adjusterPhone: { type: String, default: "" },
    RP_reportedToEmployer: { type: String, default: "" },
    EI_employerName: { type: String, default: "" },
    EI_employerPhone: { type: String, default: "" },
    EI_employerAddress: { type: String, default: "" },
    AI_attorneyName: { type: String },
    AI_attorneyPhone: { type: String },
    AI_attorneyAddress: { type: String },
    inCollection: { type: String },
    createdAt: { type: Date, default: Date.now },
    updatedAt: { type: Date, default: Date.now }
})

module.exports = mongoose.model('bt_billing_details', btBillingDetailsSchema)